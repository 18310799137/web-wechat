<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.directwebremoting.org/schema/spring-dwr  
	http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd  
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop 
 	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
<!--扫描配置transaction的注解类 并为切入点 匹配transaction-manager>>>transaction切面 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy />

 
<!--导入数据时注释掉下面这个dwr的Bean  启动web项目时再放开  -->
<!--  <bean id="dwrHandle" class="com.yucheng.im.service.web.dwr.DwrHandle">
		<dwr:remote javascript="DSjavascript">
			<dwr:include method="testDwrMethod" />
		</dwr:remote>
	</bean>  -->


	<!-- 自动扫描需要属性注入的注解类 -->
	<context:component-scan base-package="com.yucheng.im.service.manager"
		annotation-config="true" />
	<!-- 加载oracle数据库连接参数文件 -->
	<context:property-placeholder location="classpath:db/oracle.properties" />

	<!-- 配置数据源 -->
	<!-- <bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${driver}" /> <property name="url" 
		value="${url}" /> <property name="username" value="${username}" /> <property 
		name="password" value="${password}" /> </bean> -->

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc-oracle.driverClassName}" />
		<property name="url" value="${jdbc-oracle.url}" />
		<property name="username" value="${jdbc-oracle.username}" />
		<property name="password" value="${jdbc-oracle.password}" />
		<property name="initialSize" value="${jdbc-oracle.initialSize}" />
		<property name="maxActive" value="${jdbc-oracle.maxActive}" />
		<property name="minIdle" value="${jdbc-oracle.minIdle}" />
		<!-- 获取连接的最大等待时间(单位：毫秒) -->
		<property name="maxWait" value="${jdbc-oracle.maxWait}" />
		<!-- 是否强制移除废弃(超时未用)的连接 -->
		<property name="removeAbandoned" value="${jdbc-oracle.removeAbandoned}" />
		<!-- 移除废弃(超时未用)连接的等待时间(单位：秒) -->
		<property name="removeAbandonedTimeout" value="${jdbc-oracle.removeAbandonedTimeout}" />
		<!-- 打开PSCache:对oracle、db2、sybase系统的RDBMS性能优化有较大作用 -->
		<property name="poolPreparedStatements" value="${jdbc-oracle.poolPreparedStatements}" />
		<!-- 并且指定每个连接上PSCache的大小 -->
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${jdbc-oracle.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="testWhileIdle" value="${jdbc-oracle.testWhileIdle}" />
		<property name="validationQuery" value="${jdbc-oracle.validationQuery}" />
		<property name="testOnBorrow" value="${jdbc-oracle.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc-oracle.testOnReturn}" />
		<property name="defaultAutoCommit" value="${jdbc-oracle.defaultAutoCommit}" />
	</bean>
	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
	</bean>
	<!-- mybatis DB连接工厂 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>




	<!-- <aop:config> <aop:pointcut expression="execution(* com.zgh.china.service.manager.service..*.*(..))" 
		id="pointCut" /> <aop:advisor advice-ref="aspectManager" pointcut-ref="pointCut" 
		/> </aop:config> -->
	<!--切面配置为事物管理器 -->
	<!-- <tx:advice id="aspectManager" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="*" rollback-for="Exception" /> </tx:attributes> 
		</tx:advice> -->
	<!-- 为事物管理器注入数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>



</beans>  